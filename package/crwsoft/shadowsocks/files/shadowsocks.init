#!/bin/sh /etc/rc.common
#
# Copyright (C) 2015 OpenWrt-dist
# Copyright (C) 2016 Chen RuiWei <crwbak@gmail.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=90
STOP=15

CONFIG=shadowsocks
CONFIG_FILE=/var/etc/$CONFIG.json

uci_get_by_name() {
	local ret=$(uci get $CONFIG.$1.$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_get_by_type() {
	local ret=$(uci get $CONFIG.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

iptables_ext() {
	iptables -t nat -C $2 $3 2>/dev/null
	local ret=$?
	if [ "$ret" -ne 0 ];then
		iptables -t nat -$1 $2 $3 2>/dev/null
	fi
}

GLOBAL_SERVER=$(uci_get_by_type global global_server nil)

isDisabled() {
	if [ "$GLOBAL_SERVER" = "nil" ]; then
		echo  "[ 1 -eq 1 ]"
	else
		echo "[ 1 -eq 0 ]"
	fi
}

gen_config_file() {
	cat <<-EOF >$CONFIG_FILE
		{
		    "server": "$(uci_get_by_name $1 server)",
		    "server_port": $(uci_get_by_name $1 server_port),
		    "local_address": "0.0.0.0",
		    "local_port": $(uci_get_by_name $1 local_port),
		    "password": "$(uci_get_by_name $1 password)",
		    "timeout": $(uci_get_by_name $1 timeout 60),
		    "method": "$(uci_get_by_name $1 encrypt_method)"
		}
EOF
}

start_redir() {
	$(isDisabled) && exit 0
	mkdir -p /var/run /var/etc
	UDP_RELAY_SERVER=$(uci_get_by_type global udp_relay_server)
	[ "$UDP_RELAY_SERVER" = "same" ] && UDP_RELAY_SERVER=$GLOBAL_SERVER
	
	local server=$(uci_get_by_name $GLOBAL_SERVER server)
	local local_port=$(uci_get_by_name $GLOBAL_SERVER local_port)
	if [ "$GLOBAL_SERVER" = "$UDP_RELAY_SERVER" ]; then
		ARG_UDP="-u"
	elif [ -n "$UDP_RELAY_SERVER" ]; then
		ARG_UDP="-U"
		local udp_server=$(uci_get_by_name $UDP_RELAY_SERVER server)
		local udp_local_port=$(uci_get_by_name $UDP_RELAY_SERVER local_port)
	fi
	case "$(uci_get_by_name $GLOBAL_SERVER auth_enable)" in
		1|on|true|yes|enabled) ARG_OTA="-A";;
		*) ARG_OTA="";;
	esac
	gen_config_file $GLOBAL_SERVER
	if [ "$ARG_UDP" = "-U" ]; then
		/usr/bin/ss-redir \
		-c $CONFIG_FILE $ARG_OTA \
		-f /var/run/ss-redir-tcp.pid
		case "$(uci_get_by_name $UDP_RELAY_SERVER auth_enable)" in
			1|on|true|yes|enabled) ARG_OTA="-A";;
			*) ARG_OTA="";;
		esac
		gen_config_file $UDP_RELAY_SERVER
	fi
	/usr/bin/ss-redir \
	-c $CONFIG_FILE $ARG_OTA $ARG_UDP \
	-f /var/run/ss-redir.pid
	return $?
}

start_tunnel() {
	case "$(uci_get_by_type udp_forward tunnel_enable)" in
		1|on|true|yes|enabled)
			/usr/bin/ss-tunnel \
			-c $CONFIG_FILE $ARG_OTA ${ARG_UDP:="-u"} \
			-l $(uci_get_by_type udp_forward tunnel_port 5300) \
			-L $(uci_get_by_type udp_forward tunnel_forward 8.8.8.8:53) \
			-f /var/run/ss-tunnel.pid
	esac
}

add_rule() {
	$(isDisabled) && exit 0
	IPSET=$(uci_get_by_type global ipset)
	local_port=$(uci_get_by_name $GLOBAL_SERVER local_port)
	iptables -t nat -N SHADOWSOCKS 2>/dev/null
	iptables_ext I PREROUTING "-j SHADOWSOCKS"
	if [ -n "$IPSET" ]; then
		ipset -! create $IPSET iphash
		iptables_ext A SHADOWSOCKS "-p tcp -m set --match-set $IPSET dst -j REDIRECT --to $local_port"
	else
		iptables_ext A SHADOWSOCKS "-d 0.0.0.0/8 -j RETURN"
		iptables_ext A SHADOWSOCKS "-d 10.0.0.0/8 -j RETURN"
		iptables_ext A SHADOWSOCKS "-d 127.0.0.0/8 -j RETURN"
		iptables_ext A SHADOWSOCKS "-d 169.254.0.0/16 -j RETURN"
		iptables_ext A SHADOWSOCKS "-d 172.16.0.0/12 -j RETURN"
		iptables_ext A SHADOWSOCKS "-d 192.168.0.0/16 -j RETURN"
		iptables_ext A SHADOWSOCKS "-d 224.0.0.0/4 -j RETURN"
		iptables_ext A SHADOWSOCKS "-d 240.0.0.0/4 -j RETURN"
		iptables_ext A SHADOWSOCKS "-p tcp -j REDIRECT --to $local_port"
	fi
}

del_rule() {
	iptables -t nat -D PREROUTING -j SHADOWSOCKS 2>/dev/null
	iptables -t nat -F SHADOWSOCKS 2>/dev/null
	iptables -t nat -X SHADOWSOCKS 2>/dev/null
}

start() {
	start_redir
	start_tunnel
	add_rule
}

stop() {
	del_rule
	killall -q -9 ss-redir
	killall -q -9 ss-tunnel
}
